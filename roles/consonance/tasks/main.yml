---
- name: Get Architecture3 jar file
  get_url: url=https://www.dropbox.com/s/giy9ayxlvpoohiz/consonance-arch-2.0-alpha.11-SNAPSHOT.jar?dl=1 dest=/home/ubuntu/consonance-arch-{{ consonance_arch_version }}.jar
  #get_url: url=https://seqwaremaven.oicr.on.ca/artifactory/simple/seqware-release/io/consonance/consonance-arch/{{ consonance_arch_version }}/consonance-arch-{{ consonance_arch_version }}.jar dest=/home/ubuntu/consonance-arch-{{ consonance_arch_version }}.jar

# The "endless" flag for the worker is not a true/false, it's "--endless" or "".
- name: Conditionally turn endless_worker_flag on
  set_fact: endless_worker_flag=" --endless "
  when: endless_worker is defined and endless_worker

- name: Conditionally turn endless_worker_flag off
  set_fact: endless_worker_flag=""
  when: endless_worker is not defined or not endless_worker

- name: Get kill-worker script
  template: src=kill_worker_daemon.j2 dest=/home/ubuntu/kill_worker_daemon.sh

- name: Get run-worker script
  template: src=run_worker_daemon.j2 dest=/home/ubuntu/run_worker_daemon.sh

- name: queueHost is
  debug: var={{ queueHost }}

- name: Template workerConfig
  template: src=workerConfig.j2 dest=/home/ubuntu/workerConfig.ini owner=ubuntu

- name: Create .seqware directory
  file: path=/home/ubuntu/.seqware state=directory owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Copy base custom seqware settings
  copy: src=../files/seqware_settings.ini dest=/home/ubuntu/.seqware/settings owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Uncomment the custom seqware settings, IF you've requested that.
  replace: dest=/home/ubuntu/workerConfig.ini regexp='^(\#seqware-)(.*)$' replace='seqware-\2' backup=yes owner=ubuntu
  when: seqware_use_custom_settings is defined and seqware_use_custom_settings

- name: Copy over keys/credentials for workers.
  copy: src={{ item }} dest={{ item }} owner=ubuntu
  with_fileglob:
    - /home/ubuntu/.gnos/*
    - /home/ubuntu/.aws/*

- name: Install avro
  pip: name=avro executable=pip2.7 version=1.8.1

- name: Install schema-salad
  pip: name=schema-salad executable=pip2.7 version=2.2.20170222151604

- name: Install cwltool
  pip: name=cwltool executable=pip2.7 version=1.0.20170217172322

- name: Copy over patched job files
  copy: src=roles/consonance/files/job_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/job.py owner=root

- name: Copy over patched process files
  copy: src=roles/consonance/files/process_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/process.py owner=root

- name: Copy over patched main files
  copy: src=roles/consonance/files/main_new.py dest=/usr/local/lib/python2.7/dist-packages/cwltool/main.py owner=root

- name: Delete compiled job files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/job.pyc

- name: Delete compiled process files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/process.pyc

- name: Delete compiled main files
  command: rm -f /usr/local/lib/python2.7/dist-packages/cwltool/main.pyc

# install dcc-storage

#- name: Create required directory
#  become_user: root
#  file: path=/icgc/dcc-storage/ owner=ubuntu state=directory
#
#- name: Create working directory
#  become_user: root
#  file: path=/icgc/dcc-storage/archive owner=ubuntu state=directory
#
#- name: Get file
#  get_url: url=https://seqwaremaven.oicr.on.ca/artifactory/dcc-release/org/icgc/dcc/dcc-storage-client/{{ dcc_storage_version }}/dcc-storage-client-{{ dcc_storage_version }}-dist.tar.gz dest=/icgc/dcc-storage/archive
#
#- name: Unarchive the dcc tool
#  unarchive: src=/icgc/dcc-storage/archive/dcc-storage-client-{{ dcc_storage_version }}-dist.tar.gz dest=/icgc/dcc-storage/archive  copy=no
#
#- name: Copy files extracted files into correct location
#  shell: creates=/icgc/dcc-storage/bin/dcc-storage-client mv /icgc/dcc-storage/archive/dcc-storage-client-{{ dcc_storage_version }}/* /icgc/dcc-storage/
#
#- name: Template shell script
#  template: src=dcc-storage-client.j2 dest=/icgc/dcc-storage/bin/dcc-storage-client owner=ubuntu

# end dcc-storage

- name: Run worker as daemon
  become_user: root
  shell: chdir=/home/ubuntu nohup bash /home/ubuntu/run_worker_daemon.sh &
